# Task 1
'''
Напишите функцию update_dictionary(d, key, value), которая принимает на вход словарь dd и два числа: keykey и valuevalue.

Если ключ keykey есть в словаре dd, то добавьте значение valuevalue в список, который хранится по этому ключу.
Если ключа keykey нет в словаре, то нужно добавить значение в список по ключу 2 * key2∗key. Если и ключа 2 * key2∗key нет, то нужно добавить ключ 2 * key2∗key в словарь и сопоставить ему список из переданного элемента [value][value].

Требуется реализовать только эту функцию, кода вне её не должно быть.
Функция не должна вызывать внутри себя функции input и print.
'''
'''
def update_dictionary(d, key, value):
    if d.get(key)==None:
        if d.get(key*2)==None:
            d[key*2] = [value]
        else:
            d[key*2] += [value]
    else:
        d[key] += [value]

d = {}
print(update_dictionary(d, 1, -1))  # None
print(d)                            # {2: [-1]}
update_dictionary(d, 2, -2)
print(d)                            # {2: [-1, -2]}
update_dictionary(d, 1, -3)
print(d)
'''

# Task 2
'''
Программа должна считывать одну строку со стандартного ввода и выводить для каждого уникального слова в этой строке число его повторений (без учёта регистра) в формате "слово количество" (см. пример вывода).
Порядок вывода слов может быть произвольным, каждое уникальное слово﻿ должно выводиться только один раз.
'''
'''
s = input().split(' ')
d = {}
for i in range(len(s)):
    key = s[i].lower()
    if key in d:
        value = d.get(key)
        d[key] = value+1
    else:
        d[key] = int(1)
for key,value in d.items():
    print(key,value)
'''

# Task 3
'''
Напишите программу, которая считывает строку с числом nn, которое задаёт количество чисел, которые нужно считать. Далее считывает nn строк с числами x_i, по одному числу в каждой строке. Итого будет n+1n+1 строк.

При считывании числа x_ix программа должна на отдельной строке вывести значение f(x_i). Функция f(x) уже реализована и доступна для вызова. 

Функция вычисляется достаточно долго и зависит только от переданного аргумента xx. Для того, чтобы уложиться в ограничение по времени, нужно избежать повторного вычисления значений.
Time Limit: 2 секунды
Memory Limit: 256 MB
'''
"""n = int(input())
d={}
for i in range(n):
    key = int(input())
    d[key] = f(key)
    print(d.get(key))"""